name: Build and Test Extension

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  lint-and-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Lint code
      run: npm run lint-check

    - name: Type check
      run: npm run type-check

    - name: Security audit
      run: npm audit --audit-level moderate

  build:
    needs: lint-and-check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y glib2.0-dev gettext

    - name: Install npm dependencies
      run: npm ci

    - name: Build extension
      run: npm run build

    - name: Validate package structure
      run: |
        unzip -l build/draw-on-gnome@daveprowse.github.io.zip
        test -f build/draw-on-gnome@daveprowse.github.io/extension.js
        test -f build/draw-on-gnome@daveprowse.github.io/metadata.json
        test -f build/draw-on-gnome@daveprowse.github.io/schemas/gschemas.compiled

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: draw-on-gnome-extension
        path: build/*.zip
        retention-days: 30

    - name: Upload to release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build/draw-on-gnome@daveprowse.github.io.zip
        asset_name: draw-on-gnome-extension.zip
        asset_content_type: application/zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Get version from package.json
      id: get_version
      run: echo "VERSION=$(node -p "require('./package.json').version")" >> "$GITHUB_OUTPUT"

    - name: Get previous tag
      id: get_previous_tag
      run: |
        PREVIOUS_TAG=$(git tag --sort=-version:refname | head -n 1)
        if [ -z "$PREVIOUS_TAG" ]; then
          echo "PREVIOUS_TAG=" >> "$GITHUB_OUTPUT"
        else
          echo "PREVIOUS_TAG=$PREVIOUS_TAG" >> "$GITHUB_OUTPUT"
        fi

    - name: Generate changelog
      id: generate_changelog
      run: |
        if [ -n "${{ steps.get_previous_tag.outputs.PREVIOUS_TAG }}" ]; then
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" ${{ steps.get_previous_tag.outputs.PREVIOUS_TAG }}..HEAD)
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="- No changes since last release"
          fi
        else
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" --max-count=10)
        fi
        
        # Escape newlines for GitHub Actions
        CHANGELOG="${CHANGELOG//'%'/'%25'}"
        CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
        CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
        
        echo "CHANGELOG=$CHANGELOG" >> "$GITHUB_OUTPUT"

    - name: Get branch name
      id: get_branch_name
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "BRANCH_NAME=" >> "$GITHUB_OUTPUT"
        elif [[ "${{ github.ref }}" == refs/heads/* ]]; then
          echo "BRANCH_NAME=-${GITHUB_REF#refs/heads/}" >> "$GITHUB_OUTPUT"
        else
          echo "BRANCH_NAME=" >> "$GITHUB_OUTPUT"
        fi

    - name: Set release tag and name
      id: set_release_info
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "TAG_NAME=v${{ steps.get_version.outputs.VERSION }}" >> "$GITHUB_OUTPUT"
          echo "RELEASE_NAME=Release ${{ steps.get_version.outputs.VERSION }}" >> "$GITHUB_OUTPUT"
        elif [[ "${{ github.ref }}" == refs/heads/* ]]; then
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "TAG_NAME=v${{ steps.get_version.outputs.VERSION }}-${BRANCH_NAME}" >> "$GITHUB_OUTPUT"
          echo "RELEASE_NAME=Release ${{ steps.get_version.outputs.VERSION }}-${BRANCH_NAME}" >> "$GITHUB_OUTPUT"
        else
          echo "TAG_NAME=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
          echo "RELEASE_NAME=Release ${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
        fi

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: draw-on-gnome-extension
        path: ./artifacts

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ steps.set_release_info.outputs.RELEASE_NAME }}
        tag_name: ${{ steps.set_release_info.outputs.TAG_NAME }}
        body: |
          ## Release Notes

          Version: ${{ steps.get_version.outputs.VERSION }}
          Repository: ${{ github.repository }}
          Tag: ${{ steps.set_release_info.outputs.TAG_NAME }}

          ## Changelog
          ${{ steps.generate_changelog.outputs.CHANGELOG }}

          Thank you for using this extension!
        files: ./artifacts/*.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
